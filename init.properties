#indexing
coll=C:/research/codemixed/data/alldocs/
#coll=C:/research/codemixed/data/small/

#Simple keyword check to determine if code mixed or not...
#Should also be able to handle Hindi code mixing
codemix.keywords=C:/research/codemixed/CodeMixIR/codemix_words.txt

index=C:/research/codemixed/index/
stopfile=C:/research/kderlm/kderlm/stop.txt
stem=true

#read the 'index' and split into two placed in output folders
splitindex.pure=C:/research/codemixed/index.pure/
splitindex.mixed=C:/research/codemixed/index.mixed/

#num times a term needs to appear at min. to be considered for sampling
sampling.outfile=C:/research/codemixed/data/querysamples/allqueries.txt
#sampling.outfile=C:/research/codemixed/data/querysamples/test.txt
sampling.df_threshold=20

# whether to retrieve from a ccombined index
# or to retrieve from two separate indexes (one for pure one for mixed)
#retrieve.combined_index=false
retrieve.combined_index=true

#whether to use cluster (code_mixed/pure type) collection frequencies
#(this is only applicable for the combined_index mode) in addition to the whole
#collection frequencies
index.cluster=C:/research/codemixed/index.clustered/
retrieve.cluster=true

retrievability.nretrieve=100
retrievability.c=10
retrievability.outdir=C:/research/codemixed/data/rtrscores/
